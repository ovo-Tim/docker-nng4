name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: ${{ !contains(github.event.commits[0].message, '[test]') }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/nng4
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,prefix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Multi-platform image
        uses: docker/build-push-action@v5
        if: ${{ !contains(github.event.commits[0].message, '[test]') }}
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nng4:latest
          cache-to: type=inline
          load: true
          platforms: linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/loong64,linux/arm/v7,linux/arm/v6

      - name: Build test image
        uses: docker/build-push-action@v5
        if: ${{ contains(github.event.commits[0].message, '[test]') }}
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nng4:latest
          cache-to: type=inline
          load: true

      - name: Test Docker container and output logs
        if: ${{ contains(github.event.commits[0].message, '[test]') }}
        run: |
          docker images
          docker run -d -p 3000:3000 --name test-container ${{ secrets.DOCKERHUB_USERNAME }}/nng4
          sleep 20
          docker logs test-container
          response=$(curl -s http://127.0.0.1:3000/data/g/local/nng4/game.json)
          if [ -z "$response" ]; then
              echo "Error: curl returned empty response" >&2
              exit 1
          else
              echo "Response received: $response"
          fi
          sleep 5
          docker logs test-container
          docker stop test-container
          docker rm test-container

      - name: Push Docker image
        if: ${{ !contains(github.event.commits[0].message, '[test]') }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nng4:latest
          cache-to: type=inline
          push: true